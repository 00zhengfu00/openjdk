#
# Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# This must be the first rule
default: all

include $(SPEC)
include JigsawSpecMod.gmk
include MakeBase.gmk
include JavaCompilation.gmk

#JAVAC_WARNINGS := -Xlint:-unchecked,-deprecation,-overrides,auxiliaryclass,classfile,dep-ann,divzero,empty,try,varargs -Werror

$(eval $(call SetupJavaCompiler,GENERATE_JDKBYTECODE, \
    JVM := $(JAVA), \
    JAVAC := $(NEW_JAVAC), \
    FLAGS := -source 8 -target 8 \
        -encoding ascii -XDignore.symbol.file=true $(JAVAC_WARNINGS) \
        $(GENERATE_JDKBYTECODE_EXTRA_FLAGS), \
    SERVER_DIR := $(SJAVAC_SERVER_DIR), \
    SERVER_JVM := $(SJAVAC_SERVER_JAVA)))

################################################################################
# Module specific build settings

################################################################################

java.base_COPY := .icu .dat .spp

java.base_EXCLUDE_FILES := sun/text/resources/BreakIteratorRules.java

ifeq ($(OPENJDK_TARGET_OS), macosx)
  JAVA_BASE_SOLARIS_DIR := $(JDK_TOPDIR)/src/solaris/modules/java.base
  java.base_EXCLUDE_FILES := \
      $(JAVA_BASE_SOLARIS_DIR)/sun/util/locale/provider/HostLocaleProviderAdapterImpl.java \
      $(JAVA_BASE_SOLARIS_DIR)/java/net/DefaultInterface.java \
      $(JAVA_BASE_SOLARIS_DIR)/java/lang/ClassLoaderHelper.java \
      $(JAVA_BASE_SOLARIS_DIR)/sun/nio/ch/DefaultSelectorProvider.java \
      #
endif

################################################################################

java.desktop_COPY := .gif .png .wav .txt .xml .css

COPY_EXTRA += $(patsubst $(JDK_TOPDIR)/make/data/swingbeaninfo/images/%, \
    $(JDK_OUTPUTDIR)/modules/java.desktop/javax/swing/beaninfo/images/%,\
    $(wildcard $(JDK_TOPDIR)/make/data/swingbeaninfo/images/*.gif))

# The exception handling of swing beaninfo
# These resources violates the convention of having code and resources together under
# $(JDK_TOPDIR)/src/.../classes directories
$(JDK_OUTPUTDIR)/modules/java.desktop/javax/swing/beaninfo/images/%.gif: \
    $(JDK_TOPDIR)/make/data/swingbeaninfo/images/%.gif
	$(call install-file)

java.desktop_EXCLUDE_FILES := \
    javax/swing/plaf/nimbus/InternalFrameTitlePanePainter.java \
    javax/swing/plaf/nimbus/OptionPaneMessageAreaPainter.java \
    javax/swing/plaf/nimbus/ScrollBarPainter.java \
    javax/swing/plaf/nimbus/SliderPainter.java \
    javax/swing/plaf/nimbus/SpinnerPainter.java \
    javax/swing/plaf/nimbus/SplitPanePainter.java \
    javax/swing/plaf/nimbus/TabbedPanePainter.java \
    sun/awt/resources/security-icon-bw16.png \
    sun/awt/resources/security-icon-bw24.png \
    sun/awt/resources/security-icon-bw32.png \
    sun/awt/resources/security-icon-bw48.png \
    sun/awt/resources/security-icon-interim16.png \
    sun/awt/resources/security-icon-interim24.png \
    sun/awt/resources/security-icon-interim32.png \
    sun/awt/resources/security-icon-interim48.png \
    sun/awt/resources/security-icon-yellow16.png \
    sun/awt/resources/security-icon-yellow24.png \
    sun/awt/resources/security-icon-yellow32.png \
    sun/awt/resources/security-icon-yellow48.png \
    sun/awt/X11/java-icon16.png \
    sun/awt/X11/java-icon24.png \
    sun/awt/X11/java-icon32.png \
    sun/awt/X11/java-icon48.png \
    #

ifeq ($(OPENJDK_TARGET_OS), macosx)
  # exclude all X11 on Mac, we can't exclude some like below or we'll have compilation errors
  java.desktop_EXCLUDES += sun/awt/X11
  java.desktop_EXCLUDE_FILES += \
      $(JDK_TOPDIR)/src/solaris/modules/java.desktop/sun/java2d/BackBufferCapsProvider.java \
      #
else
  # TBD: figure out how to eliminate this long list
  java.desktop_EXCLUDE_FILES += \
      sun/awt/X11/ScreenFormat.java \
      sun/awt/X11/XArc.java \
      sun/awt/X11/XChar2b.java \
      sun/awt/X11/XCharStruct.java \
      sun/awt/X11/XClassHint.java \
      sun/awt/X11/XComposeStatus.java \
      sun/awt/X11/XExtCodes.java \
      sun/awt/X11/XFontProp.java \
      sun/awt/X11/XFontSetExtents.java \
      sun/awt/X11/XFontStruct.java \
      sun/awt/X11/XGCValues.java \
      sun/awt/X11/XHostAddress.java \
      sun/awt/X11/XIMCallback.java \
      sun/awt/X11/XIMHotKeyTrigger.java \
      sun/awt/X11/XIMHotKeyTriggers.java \
      sun/awt/X11/XIMPreeditCaretCallbackStruct.java \
      sun/awt/X11/XIMPreeditDrawCallbackStruct.java \
      sun/awt/X11/XIMPreeditStateNotifyCallbackStruct.java \
      sun/awt/X11/XIMStatusDrawCallbackStruct.java \
      sun/awt/X11/XIMStringConversionCallbackStruct.java \
      sun/awt/X11/XIMStringConversionText.java \
      sun/awt/X11/XIMStyles.java \
      sun/awt/X11/XIMText.java \
      sun/awt/X11/XIMValuesList.java \
      sun/awt/X11/XImage.java \
      sun/awt/X11/XKeyboardControl.java \
      sun/awt/X11/XKeyboardState.java \
      sun/awt/X11/XOMCharSetList.java \
      sun/awt/X11/XOMFontInfo.java \
      sun/awt/X11/XOMOrientation.java \
      sun/awt/X11/XPoint.java \
      sun/awt/X11/XRectangle.java \
      sun/awt/X11/XSegment.java \
      sun/awt/X11/XStandardColormap.java \
      sun/awt/X11/XTextItem.java \
      sun/awt/X11/XTextItem16.java \
      sun/awt/X11/XTextProperty.java \
      sun/awt/X11/XTimeCoord.java \
      sun/awt/X11/XWindowChanges.java \
      sun/awt/X11/XdbeSwapInfo.java \
      sun/awt/X11/XmbTextItem.java \
      sun/awt/X11/XwcTextItem.java
endif

################################################################################

javax.corba_COPY := .prp LogStrings.properties

javax.corba_EXCLUDES := \
    com/sun/corba/se/PortableActivationIDL \
    com/sun/tools/corba/se/logutil \
    #
javax.corba_EXCLUDE_FILES := \
    com/sun/corba/se/impl/presentation/rmi/JNDIStateFactoryImpl.java \
    com/sun/corba/se/spi/presentation/rmi/StubWrapper.java \
    com/sun/org/omg/CORBA/IDLTypeOperations.java \
    com/sun/org/omg/CORBA/IRObjectOperations.java \
    org/omg/PortableInterceptor/UNKNOWN.java \
    com/sun/tools/corba/se/idl/ResourceBundleUtil.java \
    com/sun/corba/se/impl/presentation/rmi/jndi.properties \
    #

################################################################################

javax.jaxb_COPY := .properties

################################################################################

javax.jaxp_CLEAN := .properties

################################################################################

javax.jaxws_CLEAN := .properties .xml

################################################################################

javax.saaj_CLEAN := .properties

################################################################################

javax.xmldsig_COPY := .dtd .xml

################################################################################

jdk.devtools_COPY := .gif .xml .css .js javax.tools.JavaCompilerTool

################################################################################

ifeq ($(OPENJDK_TARGET_OS), macosx)
  jdk.sctp_EXCLUDE_FILES := \
      $(JDK_TOPDIR)/src/solaris/modules/jdk.sctp/sun/nio/ch/sctp/SctpChannelImpl.java \
      $(JDK_TOPDIR)/src/solaris/modules/jdk.sctp/sun/nio/ch/sctp/SctpMultiChannelImpl.java \
      $(JDK_TOPDIR)/src/solaris/modules/jdk.sctp/sun/nio/ch/sctp/SctpServerChannelImpl.java \
      #
endif

################################################################################

jdk.tools_COPY := .gif .png .js .html .txt aliasmap _options messages.properties

################################################################################

jdk.tools.jaxws_CLEAN := .properties
jdk.tools.jaxws_COPY := .xsd JAXBContextFactory.java ZeroOneBooleanAdapter.java

################################################################################

sun.charsets_COPY := .dat

################################################################################

sun.localedata_COPY := _dict _th

################################################################################
# Setup the compilation of each module

ALL_SRC_DIRS := \
    $(JDK_TOPDIR)/src/share/modules \
    $(LANGTOOLS_TOPDIR)/src/share/modules \
    $(CORBA_TOPDIR)/src/share/modules \
    $(JAXP_TOPDIR)/src/share/modules \
    $(JAXWS_TOPDIR)/src/share/modules \
    $(JDK_TOPDIR)/src/$(OPENJDK_TARGET_OS_API_DIR)/modules \
    $(JDK_OUTPUTDIR)/gensrc \
    $(LANGTOOLS_OUTPUTDIR)/gensrc \
    $(CORBA_OUTPUTDIR)/gensrc \
    $(JDK_OUTPUTDIR)/gensrc_no_srczip

ifeq ($(OPENJDK_TARGET_OS), macosx)
  ALL_SRC_DIRS += $(JDK_TOPDIR)/src/macosx/modules
endif

# Find all modules with java sources by looking in the source dirs
JAVA_MODULES := $(sort $(notdir $(wildcard \
    $(patsubst %,%/*,$(filter %modules, $(ALL_SRC_DIRS))))))

MODULES_LIST_FILE := $(OUTPUT_ROOT)/jdk/genmodules/classlist/modules.list

# This macro sets up compilation of a module and declares dependencies for it.
# Param 1 - module name
define SetupModuleCompilation
  # Find the module dependencies by parsing modules.list file
  $1_DEPS := $(wordlist 2, 100, $(shell $(GREP) '^$1:' $(MODULES_LIST_FILE)))
  ifneq ($$($1_DEPS), )
    $1_CLASSPATH := $$(addprefix $(JDK_OUTPUTDIR)/modules/,$$($1_DEPS))
    $1_CLASSPATH := $$(subst $$(SPACE),$$(PATH_SEP),$$($1_CLASSPATH))
    $1_JAVAC_FLAGS := -bootclasspath "$$($1_CLASSPATH)"
  else
    # Need to set the bootclasspath for java.base too.
    $1_JAVAC_FLAGS := -bootclasspath $(JDK_OUTPUTDIR)/modules/$1
  endif

  $$(eval $$(call SetupJavaCompilation,$1, \
      SETUP := GENERATE_JDKBYTECODE, \
      SRC := $(wildcard $(patsubst %,%/$1,$(ALL_SRC_DIRS))), \
      BIN := $(JDK_OUTPUTDIR)/modules/$1, \
      HEADERS := $(JDK_OUTPUTDIR)/gensrc_headers/$1, \
      ADD_JAVAC_FLAGS := $$($1_JAVAC_FLAGS)))

  $1: $$($1)
endef

# This macro declares the dependencies in make. This needs to happen in 
# a separate call when all the module name variables have been defined.
define DeclareModuleDependencies
  $$($1): $$(foreach d,$$($1_DEPS),$$($$d))
endef

# Setup compilation for each module
$(foreach m,$(JAVA_MODULES),$(eval $(call SetupModuleCompilation,$m)))
$(foreach m,$(JAVA_MODULES),$(eval $(call DeclareModuleDependencies,$m)))

################################################################################

all: $(JAVA_MODULES) $(COPY_EXTRA)

.PHONY: all $(JAVA_MODULES)
