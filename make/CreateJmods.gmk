#
# Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

default: all

include $(SPEC)
include MakeBase.gmk

ifeq ($(MODULE), )
  $(error MODULE must be set when calling CreateJmods.gmk)
endif

################################################################################

$(eval $(call FillCacheFind, $(wildcard \
    $(SUPPORT_OUTPUTDIR)/modules_libs-stripped/$(MODULE) \
    $(SUPPORT_OUTPUTDIR)/modules_cmds-stripped/$(MODULE) \
    $(SUPPORT_OUTPUTDIR)/modules_conf/$(MODULE) \
)))

# Param 1: Name of module
define CreateJmod

  ifneq ($$(wildcard $(SUPPORT_OUTPUTDIR)/modules_libs-stripped/$1), )
    $1_JLINK_FLAGS += --libs $(SUPPORT_OUTPUTDIR)/modules_libs-stripped/$1
    $1_DEPS += $$(call CacheFind, $(SUPPORT_OUTPUTDIR)/modules_libs-stripped/$1)
  endif
  ifneq ($$(wildcard $(SUPPORT_OUTPUTDIR)/modules_cmds-stripped/$1), )
    $1_JLINK_FLAGS += --cmds $(SUPPORT_OUTPUTDIR)/modules_cmds-stripped/$1
    $1_DEPS += $$(call CacheFind, $(SUPPORT_OUTPUTDIR)/modules_cmds-stripped/$1)
  endif
  ifneq ($$(wildcard $(SUPPORT_OUTPUTDIR)/modules_conf/$1), )
    $1_JLINK_FLAGS += --config $(SUPPORT_OUTPUTDIR)/modules_conf/$1
    $1_DEPS += $$(call CacheFind, $(SUPPORT_OUTPUTDIR)/modules_conf/$1)
  endif
  ifneq ($$(wildcard $(JDK_OUTPUTDIR)/modules/$1), )
    $1_JLINK_FLAGS += --class-path $(JDK_OUTPUTDIR)/modules/$1
    $1_DEPS += $$(wildcard $(JDK_OUTPUTDIR)/modules/$1/_*)
  endif

  # TODO: What about headers?
  $(IMAGES_OUTPUTDIR)/jmods/$1.jmod: \
      $$($1_COPY_NATIVE_LIB) $$($1_COPY_NATIVE_BIN) $$($1_COPY_CMDS) \
      $$($1_COPY_CONF) $$($1_DEPS)
		$(ECHO) Creating $$(notdir $$@)
		$(MKDIR) -p $$(@D)
		$(RM) $$@
		$(JLINK) --format jmod --mid $1@9.0 \
                    --modulepath $(IMAGES_OUTPUTDIR)/jmods --hash-dependences .* \
		    --output $$@ $$($1_JLINK_FLAGS) 

  JMODS += $(IMAGES_OUTPUTDIR)/jmods/$1.jmod
endef

################################################################################

$(eval $(call CreateJmod,$(MODULE)))

all: $(JMODS)

################################################################################

