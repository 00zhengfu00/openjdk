main.usage.summary=\
Usage: {0} <options> --output <path> --format <image|jmod>\n\
use --help for a list of possible options

main.usage=\
Usage: {0} <options> --output <path> --format <image|jmod>\n\
Possible options include:

error.prefix=Error:
warn.prefix=Warning:

main.opt.help=\
\  --help                               Print this usage message

main.opt.version=\
\  --version                            Version information

main.opt.format=\
\  --format <image|jmod>                Create a jmod file or an image

main.opt.class-path=\
\  --class-path <jar_files|classes>     Application jar files|dir containing classes

main.opt.config=\
\  --config <path>                      Location of config files

main.opt.mid=\
\  --mid <mid>                          Module id

main.opt.module-path=\
\  --module-path <modulepath>           Module path

main.opt.mods=\
\  --mods <module-names>                Comma separated list of module names

main.opt.output=\
\  --output <path>                      Location of output path

main.opt.libs=\
\  --libs <path>                        Location of native libraries

main.opt.cmds=\
\  --cmds <path>                        Location of native commands

err.format.must.be.specified:--format must be specified
err.output.must.be.specified:--output must be specified
err.mid.must.be.specified:--mid must be specified
err.mods.must.be.specified:--mods must be specified
err.cp.must.be.specified:--class-path must be specified
err.modulepath.must.be.specified:--module-path must be specified
err.path.not.found=path not found: {0}
err.path.not.valid=invalid path: {0}
err.dir.not.empty=not empty: {0}
err.file.already.exists=file already exists: {0}
err.jmod.not.found=no jmod file found: {0}
err.unknown.option=unknown option: {0}
err.missing.arg=no value given for {0}
err.internal.error=internal error: {0} {1} {2}
err.invalid.arg.for.option=invalid argument for option: {0}
err.option.after.class=option must be specified before classes: {0}
err.option.unsupported={0} not supported: {1}
warn.invalid.arg=Invalid classname or pathname not exist: {0}
warn.split.package=package {0} defined in {1} {2}
