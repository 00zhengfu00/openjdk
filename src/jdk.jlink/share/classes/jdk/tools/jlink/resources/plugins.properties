class-optim.description=Look for patterns that can be optimized. Warning: This plugin is experimental.
class-optim.class-optim-log-file=Path to a file to log applied optimizations results.
class-optim.argument='':'' separated list of strategies. ''{0}'' to enable them all, \
''{1}'' to only remove useless calls to Class.forName.

compress-resources.compress-resources-level=<0|1|2>

compress-resources.compress-resources-filter=<comma separated list of resource paths | path to a file containing the list of resource paths>

compress-resources.description=\
Resource compression. Allows to achieve best compression or balance compression with startup time.\n \
0: Constant strings sharing, 30% size reduction, negligeable startup impact\n \
1: ZIP compression, around 50%+ size reduction, small startup impact\n \
2: ZIP+Constant strings sharing, 55%+ size reduction, small startup impact\n \
By default, all resources are compressed. You can express the set of resources to \
compress or not compress (use ^ for negation).\n \
eg: --{0} on --{0}-filter *Exception.class,*Error.class,^/java.base/java/lang/* --{0}-level 0

compress-resources.argument=<on|off>

compact-cp.argument=<comma separated list of resource paths>

compact-cp.description=Java Class's Constant Pool strings sharing.By default, \
all resources are compressed. You can express the set of resources to \
compress or not compress (use ^ for negation).\

copy-files.argument=<List of <file path>=<image target> to copy to the image>.

copy-files.description=Copy files. If files to copy are not absolute path, use JDK home dir.\n\
eg: jrt-fs.jar,LICENSE,/home/me/myfile.txt=somewehere/conf.txt

default-image-builder.description=\
Default image layout.

default-image-builder.genbom=\
To generate a file containing information on jlink.

exclude-files.argument=<list of files to escape | path to a file containing the list of files to escape>

exclude-files.description=Exclude files from the image. eg: --{0} *.diz, /java.base/native/client/*

exclude-resources.argument=<list of resource paths to escape | path to a file containing the list of files to escape>

exclude-resources.description=Exclude resources from jimage file. eg: --{0} *.jcov, */META-INF/*

replace-file.argument=<comma separated list of file paths and file replacement paths>. \
eg: /java.base/native/jvm.cfg,/home/me/myjvm.cfg

replace-file.description=Replace the content of a file by the content of another file.

sort-resources.argument=<list of resource paths in priority order | path to file containing ordered resource paths>

sort-resources.description=Order resources should appear in jimage file. eg: --{0} */modules-info.class, /java-base/java/lang/*

strip-java-debug.description=Strip debug information from class files.

strip-java-debug.argument=<on|off>

strip-native-commands.description=Exclude native commands (such as java/java.exe) from the image.

strip-native-commands.argument=<on|off>

zip.argument=[comma separated list of resource paths]

zip.description=ZIP Compression

main.status.ok=Functional.

main.status.not.ok= Not functional.

main.opt.list-plugins=\
\  --list-plugins                       Available plugins information

main.opt.image-builder=\
\  --image-builder                      Name of the custom image builder

main.opt.resources-last-sorter=\
\  --resources-last-sorter              Name of the last plugin allowed to sort resources within a jimage.

main.plugins-modulepath=\
\  --plugins-modulepath                 Custom plugins module path

main.plugin.name=\
\Plugin Name

main.plugin.category=\
\Category

main.plugin.description=\
\Description

main.plugin.additional.options=\
\Additional Options

main.plugin.argument=\
\Argument

main.plugin.range.from=\
Range from

main.plugin.range.to=\
to

main.plugin.option=\
\Command Line Option

main.plugin.no.value=\
\<empty>

main.image.builder.name=\
Image Builder Name

main.image.builder.description=\
Image Builder Description

main.image.builders=\
Options bound to the image builder in use.

main.plugin.state=\
Functional state

err.provider.not.functional=The provider {0} is not functional.

err.plugin.mutiple.options=More than one plugin enabled by {0} option

err.no.plugins.path=No plugins path argument.

err.dir.not.empty=not empty: {0}

err.invalid.index=invalid index for option {0}

warn.thirdparty.plugins=\
Enabling third party plugins can lead to unusable generated image.

warn.thirdparty.plugins.enabled=\
You have enabled third party plugins.
